step 0: train loss 4.2874, val loss 4.2823
iter 0: loss 4.2664, time 18887.93ms, mfu -100.00%
iter 10: loss 3.2446, time 86.94ms, mfu 4.29%
iter 20: loss 2.7914, time 87.96ms, mfu 4.28%
iter 30: loss 2.6379, time 90.28ms, mfu 4.27%
iter 40: loss 2.5754, time 92.28ms, mfu 4.24%
iter 50: loss 2.5265, time 91.91ms, mfu 4.22%
iter 60: loss 2.5135, time 93.01ms, mfu 4.20%
iter 70: loss 2.4943, time 89.22ms, mfu 4.20%
iter 80: loss 2.4974, time 92.62ms, mfu 4.18%
iter 90: loss 2.4696, time 88.58ms, mfu 4.18%
iter 100: loss 2.4622, time 87.96ms, mfu 4.19%
iter 110: loss 2.4542, time 90.05ms, mfu 4.18%
iter 120: loss 2.4236, time 90.46ms, mfu 4.18%
iter 130: loss 2.4183, time 89.69ms, mfu 4.18%
iter 140: loss 2.4010, time 92.65ms, mfu 4.16%
iter 150: loss 2.4137, time 91.79ms, mfu 4.15%
iter 160: loss 2.3702, time 92.09ms, mfu 4.14%
iter 170: loss 2.3633, time 91.82ms, mfu 4.13%
iter 180: loss 2.3160, time 90.39ms, mfu 4.13%
iter 190: loss 2.2643, time 88.58ms, mfu 4.14%
iter 200: loss 2.2165, time 90.89ms, mfu 4.13%
iter 210: loss 2.1522, time 89.41ms, mfu 4.14%
iter 220: loss 2.1464, time 90.49ms, mfu 4.14%
iter 230: loss 2.0817, time 90.32ms, mfu 4.13%
iter 240: loss 2.0785, time 91.29ms, mfu 4.13%
Traceback (most recent call last):
  File "/workspaces/nanoGPT/train.py", line 264, in <module>
    losses = estimate_loss()
  File "/home/codeany/.local/lib/python3.10/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/workspaces/nanoGPT/train.py", line 225, in estimate_loss
    losses[k] = loss.item()
KeyboardInterrupt
