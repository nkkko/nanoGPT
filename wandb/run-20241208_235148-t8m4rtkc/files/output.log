step 0: train loss 4.2874, val loss 4.2823
iter 0: loss 4.2664, time 34955.27ms, mfu -100.00%
iter 10: loss 3.2446, time 87.01ms, mfu 4.28%
iter 20: loss 2.7914, time 86.52ms, mfu 4.29%
iter 30: loss 2.6379, time 86.81ms, mfu 4.29%
iter 40: loss 2.5755, time 87.39ms, mfu 4.28%
iter 50: loss 2.5265, time 90.82ms, mfu 4.27%
iter 60: loss 2.5135, time 91.25ms, mfu 4.25%
iter 70: loss 2.4943, time 91.04ms, mfu 4.23%
iter 80: loss 2.4972, time 89.80ms, mfu 4.22%
iter 90: loss 2.4695, time 88.86ms, mfu 4.22%
iter 100: loss 2.4638, time 88.63ms, mfu 4.22%
iter 110: loss 2.4539, time 89.22ms, mfu 4.21%
iter 120: loss 2.4232, time 89.06ms, mfu 4.21%
iter 130: loss 2.4198, time 90.11ms, mfu 4.20%
iter 140: loss 2.3994, time 90.62ms, mfu 4.19%
iter 150: loss 2.4143, time 90.05ms, mfu 4.19%
iter 160: loss 2.3703, time 89.71ms, mfu 4.19%
iter 170: loss 2.3725, time 92.12ms, mfu 4.17%
iter 180: loss 2.3310, time 89.77ms, mfu 4.17%
iter 190: loss 2.2637, time 90.34ms, mfu 4.17%
iter 200: loss 2.2211, time 88.55ms, mfu 4.17%
iter 210: loss 2.1568, time 89.59ms, mfu 4.17%
iter 220: loss 2.1422, time 92.01ms, mfu 4.16%
iter 230: loss 2.0841, time 89.77ms, mfu 4.16%
iter 240: loss 2.0797, time 89.34ms, mfu 4.16%
step 250: train loss 1.9739, val loss 2.0784
saving checkpoint to out-shakespeare-char
iter 250: loss 2.0428, time 11350.33ms, mfu 3.74%
iter 260: loss 1.9760, time 88.34ms, mfu 3.79%
iter 270: loss 1.9826, time 87.51ms, mfu 3.84%
iter 280: loss 1.9822, time 90.03ms, mfu 3.87%
iter 290: loss 1.9279, time 88.83ms, mfu 3.90%
iter 300: loss 1.9058, time 89.96ms, mfu 3.93%
iter 310: loss 1.8732, time 92.77ms, mfu 3.93%
iter 320: loss 1.8546, time 94.38ms, mfu 3.94%
iter 330: loss 1.8222, time 94.13ms, mfu 3.94%
iter 340: loss 1.7867, time 91.94ms, mfu 3.95%
iter 350: loss 1.8307, time 93.03ms, mfu 3.96%
iter 360: loss 1.7772, time 91.32ms, mfu 3.97%
iter 370: loss 1.7448, time 90.33ms, mfu 3.98%
iter 380: loss 1.7303, time 89.44ms, mfu 4.00%
iter 390: loss 1.7315, time 91.01ms, mfu 4.01%
iter 400: loss 1.7729, time 90.15ms, mfu 4.02%
iter 410: loss 1.6892, time 90.68ms, mfu 4.03%
iter 420: loss 1.7153, time 92.41ms, mfu 4.03%
iter 430: loss 1.6921, time 94.36ms, mfu 4.02%
iter 440: loss 1.6581, time 91.31ms, mfu 4.03%
iter 450: loss 1.6621, time 92.61ms, mfu 4.03%
iter 460: loss 1.5992, time 91.38ms, mfu 4.03%
iter 470: loss 1.6564, time 91.83ms, mfu 4.04%
iter 480: loss 1.6252, time 93.93ms, mfu 4.03%
iter 490: loss 1.5970, time 92.69ms, mfu 4.03%
step 500: train loss 1.5275, val loss 1.7263
saving checkpoint to out-shakespeare-char
iter 500: loss 1.5974, time 11474.46ms, mfu 3.63%
iter 510: loss 1.6053, time 89.38ms, mfu 3.68%
iter 520: loss 1.5868, time 88.82ms, mfu 3.73%
iter 530: loss 1.5597, time 88.80ms, mfu 3.78%
iter 540: loss 1.6185, time 90.71ms, mfu 3.81%
iter 550: loss 1.5692, time 89.51ms, mfu 3.85%
iter 560: loss 1.5728, time 90.93ms, mfu 3.87%
iter 570: loss 1.5653, time 93.30ms, mfu 3.89%
iter 580: loss 1.5344, time 94.17ms, mfu 3.89%
iter 590: loss 1.4995, time 96.00ms, mfu 3.89%
iter 600: loss 1.5179, time 94.60ms, mfu 3.90%
iter 610: loss 1.5492, time 93.17ms, mfu 3.91%
iter 620: loss 1.5309, time 95.04ms, mfu 3.91%
iter 630: loss 1.5041, time 91.28ms, mfu 3.93%
iter 640: loss 1.4642, time 93.22ms, mfu 3.93%
iter 650: loss 1.4980, time 92.81ms, mfu 3.94%
iter 660: loss 1.5101, time 92.72ms, mfu 3.95%
iter 670: loss 1.4458, time 90.94ms, mfu 3.96%
iter 680: loss 1.5098, time 93.42ms, mfu 3.97%
iter 690: loss 1.4556, time 93.34ms, mfu 3.97%
iter 700: loss 1.4814, time 93.41ms, mfu 3.97%
iter 710: loss 1.4525, time 92.82ms, mfu 3.97%
iter 720: loss 1.4466, time 93.02ms, mfu 3.98%
iter 730: loss 1.4218, time 94.34ms, mfu 3.98%
iter 740: loss 1.4346, time 93.45ms, mfu 3.98%
Traceback (most recent call last):
  File "/workspaces/nanoGPT/train.py", line 264, in <module>
    losses = estimate_loss()
  File "/home/codeany/.local/lib/python3.10/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/workspaces/nanoGPT/train.py", line 225, in estimate_loss
    losses[k] = loss.item()
KeyboardInterrupt
